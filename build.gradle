plugins {
    id 'java'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'application'
    id 'jacoco'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Validations
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    // Tests
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.testfx:testfx-junit5:4.0.17'
    testImplementation 'org.mockito:mockito-core:5.8.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.1'

    // Email sender
    implementation 'com.sun.mail:javax.mail:1.6.2'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Loggers - Diagnostics
    implementation 'org.slf4j:slf4j-api:2.0.9'
    implementation 'ch.qos.logback:logback-classic:1.4.14'
    implementation 'ch.qos.logback:logback-core:1.4.14'

    // Hibernate - ORM
    implementation ('org.hibernate:hibernate-core:6.2.9.Final') {
        exclude group: 'org.slf4j', module: 'slf4j-api'
    }
    implementation 'com.mysql:mysql-connector-j:8.4.0'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    implementation 'at.favre.lib:bcrypt:0.9.0'

    // JavaFX
    implementation 'org.controlsfx:controlsfx:11.1.2'
}

jacocoTestReport {
    dependsOn test
}

javafx {
    version = "17"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

application {
    mainClassName = 'com.oop2.passenger_transport.HelloApplication'
}

test {
    useJUnitPlatform()
}

tasks.named('jar') {
    duplicatesStrategy = 'exclude'
    manifest {
        attributes(
                'Main-Class': 'com.oop2.passenger_transport.HelloApplication'
        )
    }
}
